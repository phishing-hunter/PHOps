# https://zenn.dev/tatsugon/articles/github-actions-permission-error
name: Phishing Hunter Release Rules
on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'rules/**'
      - 'suspicious.yaml'
      - '.github/workflows/release-config.yaml'
    tags:
      - '*'
jobs:
  tests:
    runs-on: ubuntu-latest
    container: 
      image: phishinghunter/cert-hunter:latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v18.5
    - name: Check configuration
      if: contains(steps.changed-files.outputs.all_changed_files, 'suspicious.yaml')
      run: python /app/checker.py suspicious.yaml -m 500 -s 150
    - name: Test Yara rules
      run: |
        touch rules/detection/ssl/sslblacklist.yar
        ./rules/index.sh
        yara rules/index_test.yar /test.zip

  build-push:
    runs-on: ubuntu-latest
    needs: tests
    if: github.actor == 'phishing-hunter'
    container:
      image: phishinghunter/cert-hunter:latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        pip install requests
    - name: Create rules
      run: |
        python src/create_rule.py
        ./rules/index.sh
        tar zcpvf rules.tar.gz rules
    - name: Set version as env variable
      run: echo "VERSION=$(git describe --tags)" >> $GITHUB_ENV
    - name: Create Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Version ${{ env.VERSION }}
        draft: false
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: rules.tar.gz
        asset_name: rules.tar.gz
        asset_content_type: application/gzip
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: suspicious.yaml
        asset_name: suspicious.yaml
        asset_content_type: text/plain
